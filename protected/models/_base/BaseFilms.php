<?php

/**
 * This is the model base class for the table "Films".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Films".
 *
 * Columns in table "Films" available as properties of the model,
 * followed by relations of table "Films" available as properties of the model.
 *
 * @property integer $idFilms
 * @property integer $id_allocine
 * @property string $titre
 * @property string $Titre_original
 * @property string $Affiche
 * @property string $Date_de_sortie
 * @property string $Synopsis
 * @property string $Durée
 * @property string $Bande_annonce
 *
 * @property Acteurs[] $acteurs
 * @property FilmsTelechargements[] $filmsTelechargements
 * @property Genres[] $genres
 * @property Pays[] $pays
 * @property Realisateurs[] $realisateurs
 */
abstract class BaseFilms extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Films';
	}

	public static function representingColumn() {
		return 'titre';
	}

	public function rules() {
		return array(
			array('titre, Synopsis', 'required'),
			array('id_allocine', 'numerical', 'integerOnly'=>true),
			array('titre, Titre_original', 'length', 'max'=>150),
			array('Affiche', 'length', 'max'=>40),
			array('Date_de_sortie', 'length', 'max'=>15),
			array('Durée', 'length', 'max'=>10),
			array('Bande_annonce', 'length', 'max'=>200),
			array('id_allocine, Titre_original, Affiche, Date_de_sortie, Durée, Bande_annonce', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idFilms, id_allocine, titre, Titre_original, Affiche, Date_de_sortie, Synopsis, Durée, Bande_annonce', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'acteurs' => array(self::MANY_MANY, 'Acteurs', 'Acteurs_has_Films(Films_idFilms, Acteurs_idActeurs)'),
			'filmsTelechargements' => array(self::HAS_MANY, 'FilmsTelechargements', 'Films_idFilms'),
			'genres' => array(self::MANY_MANY, 'Genres', 'Genres_has_Films(Films_idFilms, Genres_idGenres)'),
			'pays' => array(self::MANY_MANY, 'Pays', 'Pays_has_Films(Films_idFilms, Pays_idPays)'),
			'realisateurs' => array(self::MANY_MANY, 'Realisateurs', 'Realisateurs_has_Films(Films_idFilms, Realisateurs_idRealisateurs)'),
		);
	}

	public function pivotModels() {
		return array(
			'acteurs' => 'ActeursHasFilms',
			'genres' => 'GenresHasFilms',
			'pays' => 'PaysHasFilms',
			'realisateurs' => 'RealisateursHasFilms',
		);
	}

	public function attributeLabels() {
		return array(
			'idFilms' => Yii::t('app', 'Id Films'),
			'id_allocine' => Yii::t('app', 'Id Allocine'),
			'titre' => Yii::t('app', 'Titre'),
			'Titre_original' => Yii::t('app', 'Titre Original'),
			'Affiche' => Yii::t('app', 'Affiche'),
			'Date_de_sortie' => Yii::t('app', 'Date De Sortie'),
			'Synopsis' => Yii::t('app', 'Synopsis'),
			'Durée' => Yii::t('app', 'Durée'),
			'Bande_annonce' => Yii::t('app', 'Bande Annonce'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idFilms', $this->idFilms);
		$criteria->compare('id_allocine', $this->id_allocine);
		$criteria->compare('titre', $this->titre, true);
		$criteria->compare('Titre_original', $this->Titre_original, true);
		$criteria->compare('Affiche', $this->Affiche, true);
		$criteria->compare('Date_de_sortie', $this->Date_de_sortie, true);
		$criteria->compare('Synopsis', $this->Synopsis, true);
		$criteria->compare('Durée', $this->Durée, true);
		$criteria->compare('Bande_annonce', $this->Bande_annonce, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}