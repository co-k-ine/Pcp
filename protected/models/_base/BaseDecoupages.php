<?php

/**
 * This is the model base class for the table "Decoupages".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Decoupages".
 *
 * Columns in table "Decoupages" available as properties of the model,
 * followed by relations of table "Decoupages" available as properties of the model.
 *
 * @property integer $idDecoupages
 * @property string $DecoupagesNom
 * @property string $Telechargements
 *
 * @property FilmsTelechargements[] $filmsTelechargements
 */
abstract class BaseDecoupages extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Decoupages';
	}

	public static function representingColumn() {
		return 'DecoupagesNom';
	}

	public function rules() {
		return array(
			array('DecoupagesNom', 'required'),
			array('DecoupagesNom', 'length', 'max'=>50),
			array('Telechargements', 'length', 'max'=>250),
			array('Telechargements', 'default', 'setOnEmpty' => true, 'value' => null),
			array('idDecoupages, DecoupagesNom, Telechargements', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'filmsTelechargements' => array(self::MANY_MANY, 'FilmsTelechargements', 'Decoupages_has_Films_Telechargements(Decoupages_idDecoupages, Films_Telechargements_idFilms_Telechargements)'),
		);
	}

	public function pivotModels() {
		return array(
			'filmsTelechargements' => 'DecoupagesHasFilmsTelechargements',
		);
	}

	public function attributeLabels() {
		return array(
			'idDecoupages' => Yii::t('app', 'Id Decoupages'),
			'DecoupagesNom' => Yii::t('app', 'Decoupages Nom'),
			'Telechargements' => Yii::t('app', 'Telechargements'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('idDecoupages', $this->idDecoupages);
		$criteria->compare('DecoupagesNom', $this->DecoupagesNom, true);
		$criteria->compare('Telechargements', $this->Telechargements, true);

		return new CActiveDataProvider(get_class($this), array(
			'criteria' => $criteria,
		));
	}
}